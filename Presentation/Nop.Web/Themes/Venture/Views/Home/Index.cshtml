@using Nop.Core
@using Nop.Core.Domain.Seo
@using Nop.Core.Infrastructure
@using Nop.Services.Configuration
@using Microsoft.AspNetCore.WebUtilities

@inject SeoSettings seoSettings
@inject ISettingService settingService
@inject IStoreContext storeContext

@{
    Layout = "_ColumnsOne";

    //title
    if (!string.IsNullOrEmpty(seoSettings.HomepageTitle))
    {
        Html.AddTitleParts(seoSettings.HomepageTitle);
    }

    //meta
    if (!string.IsNullOrEmpty(seoSettings.HomepageDescription))
    {
        Html.AddMetaDescriptionParts(seoSettings.HomepageDescription);
    }

    //page class
    Html.AppendPageCssClassParts("html-home-page");

    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var homePageProductBoxLayout = await settingService.GetSettingByKeyAsync("venturethemesettings.homepageitemboxlayout", "layout-1", storeId, true);
    var homePageProductBoxLayoutClass = "product-box-" + homePageProductBoxLayout;

    var homePageFeaturedVideoLink = await settingService.GetSettingByKeyAsync("venturethemesettings.homepagefeaturedvideolink", string.Empty, storeId, true);

    var videoIframe = string.Empty;

    if (!string.IsNullOrEmpty(homePageFeaturedVideoLink))
    {
        var uri = new Uri(homePageFeaturedVideoLink);
        var query = QueryHelpers.ParseQuery(uri.Query);
        var videoId = query["v"];

        videoIframe = string.Format("<iframe src='https://www.youtube.com/embed/{0}?rel=0' frameborder='0' allowfullscreen></iframe>", videoId);
    }
}
<div class="page home-page @homePageProductBoxLayoutClass">
    <div class="page-body">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageTop })
        @await Component.InvokeAsync("Widget", new { widgetZone = "venture_home_page_info_boxes" })
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeCategories })
        @await Component.InvokeAsync("HomepageCategories")
        @await Component.InvokeAsync("TopicBlock", new { systemName = "HomepageText" })
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeProducts })
        @await Component.InvokeAsync("HomepageProducts")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeBestSellers })
        @await Component.InvokeAsync("HomepageBestSellers")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeNews })
        @await Component.InvokeAsync("HomepageNews")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforePoll })
        @await Component.InvokeAsync("HomepagePolls")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBottom })
        <div class="home-page-bottom-wrapper">
            @{
                var carouselWidgetZone = await Component.InvokeAsync("Widget", new { widgetZone = "venture_home_page_bottom" });
            }
            @if (!String.IsNullOrEmpty(await carouselWidgetZone.RenderHtmlContentAsync()))
            {
                <div class="carousel-wrapper">
                    @carouselWidgetZone
                </div>
            }
            @if (!string.IsNullOrEmpty(videoIframe))
            {
                <div class="home-page-featured-video-wrapper">
                    <div class="home-page-video-title title">
                        <strong>@T("SevenSpikes.Themes.Venture.Common.HomePageVideoTitle")</strong>
                    </div>
                    <div class="home-page-featured-video">@Html.Raw(videoIframe)</div>
                </div>
            }
        </div>
    </div>
</div>
<div id="notice-pop-up-landing">
</div>
<script asp-location="Footer">
    $(document).ready(function () {

        $.ajax({
            type: "GET",
            url: "@Url.Action("Display", "Participants")",,
            success: function (data) {
                if (data.success) {
                    $.each(data.result, function (index, value) {
                        loadPopup(value.Id);

                    });
                }
            },
            error: function (error) {

            }
        });

        function loadPopup(noticeId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("RegisterParticipants", "Participants")",
                data: { id: noticeId },
                success: function (data) {

                    var append = '<div id="notice-pop-up-landing-' + noticeId + '"></div>'
                    $('#notice-pop-up-landing').append(append);
                    $('#notice-pop-up-landing-' + noticeId).html(data);
                    $("#resgister-participants-form-" + noticeId).css("display", "none");
                    $("#notice-pop-up-landing-" + noticeId).dialog();
                    $("#show-register-button-" + noticeId).on("click", function () {
                        $(this).css("display", "none");
                        $("#resgister-participants-form-" + noticeId).removeAttr("style")
                    });

                    $(".term-and-conditions-id-" + noticeId).on("click", function () {

                        if ($(this).prop("checked")) {
                            $("#term-and-conditions-page-load-" + noticeId).css("display", "none");
                            let displayThankYou = $("#thank-you-page-load-" + noticeId).attr("data-thankYou");
                            if (displayThankYou != undefined && JSON.parse(displayThankYou.toLowerCase())) {
                                $("#thank-you-page-load-" + noticeId).removeAttr("style");

                            }
                            else {
                                $("#notice-pop-up-landing-" + noticeId).dialog('close')
                            }

                        }
                    });

                    $("#register-participants-form-submit-" + noticeId).submit(function (e) {

                        e.preventDefault(); // avoid to execute the actual submit of the form.
                        var form = $(this);
                        addAntiForgeryToken(form);
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("RegisterParticipants", "Participants")",
                            data: form.serialize(), // serializes the form's elements.
                            success: function (data) {
                                if (data.success) {
                                    $("#notice-page-load-" + noticeId).css("display", "none");
                                    let displayTermAndCondition = $("#term-and-conditions-page-load-" + noticeId).attr("data-termAndConditions");
                                    let displayThankYou = $("#thank-you-page-load-" + noticeId).attr("data-thankYou");
                                    if (displayTermAndCondition != undefined && JSON.parse(displayTermAndCondition.toLowerCase())) {
                                        $("#term-and-conditions-page-load-" + noticeId).removeAttr("style");
                                        $("#resgister-participants-form-" + noticeId).css("display", "none");



                                    } else if (displayThankYou != undefined && JSON.parse(displayThankYou.toLowerCase())) {
                                        $("#term-and-conditions-page-load-" + noticeId).css("display", "none");
                                        $("#resgister-participants-form-" + noticeId).css("display", "none");
                                        $("#thank-you-page-load-" + noticeId).removeAttr("style");
                                    }
                                    else {
                                        alert("Thank you for registering!")
                                        $("#show-register-button-" + noticeId).removeAttr("style");
                                        $("#resgister-participants-form-" + noticeId).css("display", "none");
                                        $("#register-participants-form-submit-" + noticeId).trigger("reset");
                                    }
                                }

                            },

                            error: function (error) {

                            }
                        });

                    });


                },

                error: function (error) {

                }
            });

        }

    });

</script>