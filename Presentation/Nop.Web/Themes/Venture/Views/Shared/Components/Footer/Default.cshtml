@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration

@model FooterModel

@inject IWorkContext workContext
@inject IStoreContext storeContext
@inject ISettingService settingService

@{
    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var userAgent = Url.ActionContext.HttpContext.Request.Headers["User-Agent"];
    var removeCopyright = await settingService.GetSettingByKeyAsync("venturethemesettings.removecopyright", false, storeId, true);
    var removeDesignedBy = await settingService.GetSettingByKeyAsync("venturethemesettings.removedesignedby", false, storeId, true);

    var controllerName = Url.ActionContext.RouteData.Values["controller"].ToString();
    var isHomePage = controllerName.Equals("home", StringComparison.InvariantCultureIgnoreCase);

    var isIe9 = false;
    if (!String.IsNullOrEmpty(userAgent) && userAgent.ToString().ToLower().IndexOf("MSIE 9.0", StringComparison.InvariantCultureIgnoreCase) > 0)
    {
        isIe9 = true;
    }

    var showFooterMap = await settingService.GetSettingByKeyAsync("venturethemesettings.enablefootermap", true, storeId, true);
}

@if (isHomePage)
{
    <div class="home-page-footer-banners">
        @await Component.InvokeAsync("Widget", new { widgetZone = "venture_theme_footer_banner_1" })
        @await Component.InvokeAsync("Widget", new { widgetZone = "venture_theme_footer_banner_2" })
        @await Component.InvokeAsync("Widget", new { widgetZone = "venture_theme_footer_banner_3" })
    </div>
}
<footer>
    <div class="footer-top pt-50 pb-30">
        <div class="container">
            <div class="row">
                <div class="col-lg-2 col-md-6 col-12">
                    <div class="footer-widget mb-30">
                        <div class="footer-widget-title mb-20">
                            <h3>@T("SevenSpikes.Themes.Venture.Common.Information")</h3>
                        </div>
                        <div class="food-info-content">
                            @if (Model.DisplayContactUsFooterItem)
                            {
                                <p><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></p>
                            }
                            @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                            {
                                <p><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></p>
                            }
                        </div>
                    </div>
                </div>
                <div class="col-lg-5 col-md-6 col-12">
                    <div class="footer-widget mb-30">
                        <div class="footer-widget-title mb-20">
                            <h3>PRODUCTS</h3>
                        </div>
                        <div class="quick-links">
                            <ul class="col-lg-6 col-md-6 col-12 pull-left">
                                <li><a href="">Street/Naked Bikes</a></li>
                                <li><a href="">Scooter</a></li>
                                <li><a href="">Bikes</a></li>
                                <li><a href="">Sport Bikes</a></li>
                            </ul>
                            <ul class="col-lg-6 col-md- col-12 pull-left">
                                <li><a href="">Maxi-Scooter</a></li>
                                <li><a href="">Cruisers</a></li>
                                <li><a href="">Off Road Bikes</a></li>
                                <li><a href="">Adventure Tourers</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-lg-5 col-md-6 col-12">
                    <div class="footer-widget mb-30">
                        <div class="footer-widget-title mb-20">
                            <h3>REACH US</h3>
                        </div>
                        <div class="food-info-wrapper">
                            <div class="col-md-6 pull-left">
                                <div class="food-address">
                                    <div class="food-info-title mb-2">
                                        <span>Phone No.</span>
                                    </div>
                                    <div class="food-info-content">
                                        <p>@T("SevenSpikes.Themes.Venture.Common.MobilePhone")</p>
                                        <p>@T("SevenSpikes.Themes.Venture.Common.Phone")</p>
                                    </div>
                                </div>
                                <div class="food-address">
                                    <div class="food-info-title mb-2">
                                        <span>Location</span>
                                    </div>
                                    <div class="food-info-content">
                                        <p>@T("SevenSpikes.Themes.Venture.Common.Address")</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 pull-left">
                                <div class="food-address">
                                    <div class="food-info-title mb-2">
                                        <span>Email</span>
                                    </div>
                                    <div class="food-info-content">
                                        <p>@T("SevenSpikes.Themes.Venture.Common.EMail")</p>
                                    </div>
                                </div>
                                <div class="food-address">
                                    <div class="food-info-title mb-2">
                                        <span>Follow Us</span>
                                    </div>
                                    <div class="food-info-content">
                                        <span>
                                            @await Component.InvokeAsync("SocialButtons")
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-12">
                <div class="footer-widget mb-30">
                    <div class="footer-widget-title mb-20">
                        <h3>@T("SevenSpikes.Themes.Venture.Common.Newsletter")</h3>
                    </div>
                    <div class="food-info-content">
                        <p>
                            @T("SevenSpikes.Themes.Venture.Common.NewsletterSubscribeText")@await Component.InvokeAsync("NewsletterBox")
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
    <a href="">
        <div class="footer-logo">
            <img src="~/images/thumbs/0003396_logo.png" class="w-100" alt="">
        </div>
    </a>
    <div class="footer-bottom ptb-35 black-bg" style="border-top: #2789bd solid 6px;">
        <div class="container">
            <div class="row">
                <div class="col-md-8 col-12">
                    <div class="copyright">
                        <p>@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</p>
                    </div>
                </div>
                <div class="col-md-4 col-12">
                    <div class="copyright text-right text-white">
                        <ul class="footer-copy-list">
                            <li><a href="">Terms of Use</a></li>
                            <li><a href="">Privacy Policy</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>
<div id="notice-pop-up-landing-footer">
</div>
<script asp-location="Footer">
    $(".button-register-participants").on("click", function (e) {
        e.preventDefault(); // avoid to execute the actual submit of the form.
        var form = $("#register-participants-form-submit");

        if (!form[0].checkValidity()) {
            return;
        }
       // addAntiForgeryToken(form);

        $.ajax({
            type: "POST",
            url: "@Url.Action("RegisterParticipant", "Participants")",
            data: form.serialize(), // serializes the form's elements.

            success: function (data) {
                if (data.success) {
                    form.trigger('reset');
                    $("#thank-you-page-load").removeAttr("style");
                } else {
                    alert(data.message)
                }

            },

            error: function (error) {

            }
        });

    });

</script>

<script asp-location="Footer">

    $(document).ready(function () {

        $.ajax({
            type: "GET",
            url: "@Url.Action("ShowInPage", "Participants")",
            success: function (data) {
                if (data.success) {
                    $.each(data.result, function (index, value) {
                        loadInShow(value.Id);

                    });

                }
               
            },
            error: function (error) {

            }
        });


        function loadInShow(noticeId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("RegisterParticipants", "Participants")",
                data: { id: noticeId },
                success: function (data) {

                    var append = '<div id="notice-pop-up-landing-footer-' + noticeId + '"></div>'
                    $('#notice-pop-up-landing-footer').append(append);
                    $('#notice-pop-up-landing-footer-' + noticeId).html(data);
                    $("#resgister-participants-form-" + noticeId).css("display", "none");
                    $("#notice-pop-up-landing-footer-" + noticeId).dialog();
                    $("#show-register-button-" + noticeId).on("click", function () {
                        $(this).css("display", "none");
                        $("#resgister-participants-form-" + noticeId).removeAttr("style")
                    });

                    $(".term-and-conditions-id-" + noticeId).on("click", function () {

                        if ($(this).prop("checked")) {
                            $("#term-and-conditions-page-load-" + noticeId).css("display", "none");
                            let displayThankYou = $("#thank-you-page-load-" + noticeId).attr("data-thankYou");
                            if (displayThankYou != undefined && JSON.parse(displayThankYou.toLowerCase())) {
                                $("#thank-you-page-load-" + noticeId).removeAttr("style");

                            }
                            else {
                                $("#notice-pop-up-landing-footer-" + noticeId).dialog('close')
                            }

                        }
                    });

                    $("#register-participants-form-submit-" + noticeId).submit(function (e) {

                        e.preventDefault(); // avoid to execute the actual submit of the form.
                        var form = $(this);
                        addAntiForgeryToken(form);
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("RegisterParticipants", "Participants")",
                            data: form.serialize(), // serializes the form's elements.
                            success: function (data) {
                                if (data.success) {
                                    $("#notice-page-load-" + noticeId).css("display", "none");
                                    let displayTermAndCondition = $("#term-and-conditions-page-load-" + noticeId).attr("data-termAndConditions");
                                    let displayThankYou = $("#thank-you-page-load-" + noticeId).attr("data-thankYou");
                                    if (displayTermAndCondition != undefined && JSON.parse(displayTermAndCondition.toLowerCase())) {
                                        $("#term-and-conditions-page-load-" + noticeId).removeAttr("style");
                                        $("#resgister-participants-form-" + noticeId).css("display", "none");

                                    } else if (displayThankYou != undefined && JSON.parse(displayThankYou.toLowerCase())) {
                                        $("#term-and-conditions-page-load-" + noticeId).css("display", "none");
                                        $("#resgister-participants-form-" + noticeId).css("display", "none");
                                        $("#thank-you-page-load-" + noticeId).removeAttr("style");
                                    }
                                    else {
                                        alert("Thank you for registering!")
                                        $("#show-register-button-" + noticeId).removeAttr("style");
                                        $("#resgister-participants-form-" + noticeId).css("display", "none");
                                        $("#register-participants-form-submit-" + noticeId).trigger("reset");
                                    }
                                }

                            },

                            error: function (error) {

                            }
                        });

                    });


                },

                error: function (error) {

                }
            });

        }

         function callControllerAction() {
        $.ajax({
            url: "@Url.Action("GetIntervalAction", "Participants")",, // Replace with your controller and action names
            type: 'GET', // Or 'POST' depending on your requirements

            success: function (data) {
                // Handle the response from the server
                console.log(data);

                if (data.success && data.Timer !==null) {
                    setInterval(loadInShow(data.id), data.Timer);
                }
            },
            error: function (error) {
                // Handle errors
                console.error(error);
            }
        });
    }
    });

</script>