@model FoxNetSoft.Plugin.Misc.PopupManager.Models.Admin.PopupWindowModel
@using FoxNetSoft.Plugin.Misc.PopupManager.Models.Admin
@using Microsoft.AspNetCore.Routing

<div class="cards-group">
    @if (Model.Id > 0)
    {
    <div class="card card-default">
        <div class="card-body">
            @await Html.PartialAsync("Table", new DataTablesModel
{
Name = "popupwindowconditions-grid",
UrlRead = new DataUrl("ConditionList", "PopupManagerAdmin", new RouteValueDictionary { [nameof(Model.PopupWindowSearchModel.PopupWindowId)] = Model.PopupWindowSearchModel.PopupWindowId }),
UrlDelete = new DataUrl("ConditionDelete", "PopupManagerAdmin", null),
Length = Model.PopupWindowSearchModel.PageSize,
LengthMenu = Model.PopupWindowSearchModel.AvailablePageSizes,
ColumnCollection = new List<ColumnProperty>
{
new ColumnProperty(nameof(PopupWindowConditionModel.ConditionType))
{
Title = T("Admin.FoxNetSoft.PopupManager.Condition.Fields.ConditionType").Text,
Width = "150"
},
new ColumnProperty(nameof(PopupWindowConditionModel.ConditionProperty))
{
Title = T("Admin.FoxNetSoft.PopupManager.Condition.Fields.ConditionProperty").Text,
Width = "150"
},
new ColumnProperty(nameof(PopupWindowConditionModel.ConditionOperator))
{
Title = T("Admin.FoxNetSoft.PopupManager.Condition.Fields.ConditionOperator").Text,
Width = "150"
},
new ColumnProperty(nameof(PopupWindowConditionModel.ConditionValue))
{
Title = T("Admin.FoxNetSoft.PopupManager.Condition.Fields.ConditionValueId").Text,
Width = "150"
},
            new ColumnProperty(nameof(PopupWindowConditionModel.Id))
            {
                Title = T("Admin.Common.Edit").Text,
                Width = "100",
                ClassName = NopColumnClassDefaults.Button,
                Render = new RenderCustom("renderColumnConditionEdit")
            },
new ColumnProperty(nameof(PopupWindowConditionModel.Id))
{
Title = T("Admin.Common.Delete").Text,
Width = "100",
Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
ClassName = NopColumnClassDefaults.Button
}
}
})
        </div>

        <div class="card-footer">
            <button type="submit" id="btnAddNewPopupWindowCondition"
                    onclick="javascript:OpenWindow('@(Url.Action("ConditionEditPopup", "PopupManagerAdmin", new { popupWindowId = Model.Id, btnId = "btnRefreshPopupWindowCondition", formId = "popupwindow-form" }))', 800, 500, true); return false;"
                    class="btn btn-primary">
                @T("Admin.FoxNetSoft.PopupManager.Condition.AddNew")
            </button>
            <input type="submit" id="btnRefreshPopupWindowCondition" style="display: none" />
            <script>
                $(document).ready(function () {
                    $('#btnRefreshPopupWindowCondition').click(function () {
                        //refresh grid
                        updateTable('#popupwindowconditions-grid');

                        //return false to don't reload a page
                        return false;
                    });
                });
                function renderColumnConditionEdit(data, type, row, meta) {
                    return '<button onclick=\"javascript:OpenWindow(\'@Url.Content("~/Admin/PopupManagerAdmin/ConditionEditPopup")?popupWindowConditionId=' + data + '&popupWindowId=' + row.PopupWindowId+'&btnId=btnRefreshPopupWindowCondition&formId=popupwindow-form\', 800, 400, true); return false;\" class="btn btn-default"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</button>';
                }
            </script>
        </div>
    </div>
    }
    else
    {
        <div class="card card-default">
            <div class="card-body">
                @T("Admin.FoxNetSoft.PopupManager.Conditions.SaveBeforeEdit")
            </div>
        </div>
    }
</div>