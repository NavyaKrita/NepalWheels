@model FoxNetSoft.Plugin.Misc.PopupManager.Models.Admin.PopupWindowModel
@using FoxNetSoft.Plugin.Misc.PopupManager.Models.Admin
@using Microsoft.AspNetCore.Routing

    <div class="cards-group">
        @if (Model.Id > 0)
        {
            if (Model.NumberOfAvailableCategories > 0)
            {
                <div class="card card-default">
                    <div class="card-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
         {
         Name = "popupwindowcategories-grid",
         UrlRead = new DataUrl("CategoryList", "PopupManagerAdmin", new RouteValueDictionary { [nameof(Model.PopupWindowSearchModel.PopupWindowId)] = Model.PopupWindowSearchModel.PopupWindowId }),
         UrlDelete = new DataUrl("CategoryDelete", "PopupManagerAdmin", null),
         Length = Model.PopupWindowSearchModel.PageSize,
         LengthMenu = Model.PopupWindowSearchModel.AvailablePageSizes,
         ColumnCollection = new List<ColumnProperty>
     {
         new ColumnProperty(nameof(PopupWindowCategoryModel.Published))
         {
             Title = T("Admin.FoxNetSoft.PopupManager.Products.Fields.Published").Text,
                                             Width = "70",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
         },
         new ColumnProperty(nameof(PopupWindowCategoryModel.Category))
         {
             Title = T("Admin.Catalog.Categories.Fields.Name").Text
         },
         new ColumnProperty(nameof(PopupWindowCategoryModel.CategoryId))
         {
             Title = T("Admin.Common.View").Text,
             Width = "150",
             ClassName = NopColumnClassDefaults.Button,
             Render = new RenderButtonView(new DataUrl("~/Admin/Category/Edit/", nameof(PopupWindowCategoryModel.CategoryId)))
         },
         new ColumnProperty(nameof(PopupWindowCategoryModel.Id))
         {
             Title = T("Admin.Common.Delete").Text,
             Width = "100",
             Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
             ClassName = NopColumnClassDefaults.Button
         }
     }
 })
                    </div>
                </div>

                <div class="card card-default no-margin">
                    <div class="card-header">
                        @T("Admin.Common.AddNewRecord")
                    </div>
                    <div class="card-body">
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="@Model.AddPopupWindowCategory.CategoryId" />
                            </div>
                            <div class="col-md-9">
                                <nop-select asp-for="@Model.AddPopupWindowCategory.CategoryId" asp-items="@Model.AvailableCategories" />
                                <span asp-validation-for="@Model.AddPopupWindowCategory.CategoryId"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-9 offset-md-3">
                                <button type="button" id="addPopupWindowCategory" class="btn btn-primary">@T("Admin.Common.AddNewRecord")</button>
                            </div>
                        </div>
                    </div>
                    <script>
                    $(document).ready(function () {
                        $('#addPopupWindowCategory').click(function () {
                            $('#addPopupWindowCategory').attr('disabled', true);
                            var postData = {
                                CategoryId: $("#@Html.IdFor(model => model.AddPopupWindowCategory.CategoryId)").val(),
                                PopupWindowId: @Model.Id
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@Html.Raw(Url.Action("CategoryInsert", "PopupManagerAdmin"))",
                                data: postData,
                                success: function (data, textStatus, jqXHR) {
                                    if (data.Result) {
                                        //reload grid
                                        updateTable('#popupwindowcategories-grid');

                                        //clear input value
                                        //$("#@Html.IdFor(model => model.AddPopupWindowCategory.CategoryId)").val('');
                                    } else {
                                        //display errors if returned
                                        display_nop_error(data);
                                    }
                                },
                                complete: function (jqXHR, textStatus) {
                                    $('#addPopupWindowCategory').attr('disabled', false);
                                }
                            });
                        });
                    });
                    </script>
                </div>
            }
            else
            {
                <div class="card card-default">
                    <div class="card-body">
                        @T("Admin.Catalog.Products.Fields.Categories.NoCategoriesAvailable")
                    </div>
                </div>
            }
        }
        else
        {
            <div class="card card-default">
                <div class="card-body">
                    @T("Admin.FoxNetSoft.PopupManager.Categories.SaveBeforeEdit")
                </div>
            </div>
        }
    </div>